{"version":3,"sources":["../../src/pages/otherplaces/otherplaces.ts","../../src/shared/conversion.module.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/models/darkskyapi-datapoint.model.ts","../../src/pages/capitalforecast/capitalforecast.ts","../../src/pages/home/home.ts","../../src/pages/contact/contact.ts","../../src/config/darksky.ts","../../src/models/darkskyapi-datablock.model.ts","../../src/shared/icon-setter.module.ts","../../src/components/components.module.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/components/forecast/forecast.ts","../../src/models/darkskyapi-response.model.ts","../../src/config/capitals.ts","../../src/components/offline-message/offline-message.ts","../../src/models/app-message.model.ts","../../src/app/app.component.ts","../../src/config/firebase.ts","../../src/models/ionicnative-geoposition.model.ts","../../src/services/ionicnative.service.ts","../../src/services/darkskyapi.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component }                    from '@angular/core';\nimport { NavController }                from 'ionic-angular';\n\nimport { IonicNativeGeoposition }       from    '../../models/ionicnative-geoposition.model';\nimport { CapitalForecastPage }          from    '../../pages/capitalforecast/capitalforecast';\nimport { Observable }                   from \"rxjs/Observable\";\nimport { CAPITALS }                     from   '../../config/capitals';\n\n@Component({\n  selector: 'page-otherplaces',\n  templateUrl: 'otherplaces.html'\n})\n\nexport class OtherPlacePage {\n  \n  capitals : any;\n\n  constructor(public navCtrl: NavController) {\n    this.capitals = CAPITALS;\n  }\n\n  /**Open CapitalForecastPage and pass into it the position on capital witch user select */\n  showForecast(latitude: number, longitude: number, capitalname:string) {    \n    let position: IonicNativeGeoposition = new IonicNativeGeoposition();    \n    console.log(\"Location : \" + latitude + \" / \" + longitude);\n    position.latitude = latitude;\n    position.longitude = longitude;\n    this.navCtrl.push(CapitalForecastPage, {\n      name: capitalname,\n      position: position\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/otherplaces/otherplaces.ts","/**\n * All function about temperature converson are here\n */\n\nexport module CONVERSION {\n\n    export function convertToCelsius(fahrenheitValue : number) : number {\n        let celsiusValue: number;\n        celsiusValue = (fahrenheitValue - 32) / 1.8;\n\n        return celsiusValue;\n    }\n\n    export function convertToFahrenheit(Celsius : number) : number {\n        let fahr: number;\n        fahr = (Celsius * 1.8) + 32;\n\n        return fahr;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/conversion.module.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 177;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 177\n// module chunks = 2","var map = {\n\t\"../pages/next-week-forecast/next-week-forecast.module\": [\n\t\t568,\n\t\t0\n\t],\n\t\"../pages/place-forecast/place-forecast.module\": [\n\t\t567,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 220;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 220\n// module chunks = 2","\n/**\n * A data point object contains various properties, each representing the average (unless otherwise specified) \n * of a particular weather phenomenon occurring during a period of time: an instant in the case of currently, \n * a minute for minutely, an hour for hourly, and a day for daily\n */\nexport class DarkSkyApiDataPoint {\n    placeName: string;\n    icon: string;\n    precipType: string;\n    time: number;\n    summary: number;\n    temperature: number;\n    nearestStormDistance: number;\n    precipIntensity: number;\n    precipIntensityError: number;\n    precipProbability: number;  \n\n    temperatureMax: number;\n    temperatureMin: number;\n    apparentTemperature: number;\n    apparentTemperatureMax: number;\n    apparentTemperatureMaxTime: number;\n    apparentTemperatureMin: number;\n    apparentTemperatureMinTime: number;\n    cloudCover: number;\n    dewPoint: number;\n    humidity: number;\n    moonPhase: number;\n    windSpeed: number;\n    windGust: number;\n    windBearing: number;\n    visibility: number;\n    pressure: number;\n    ozone: number;\n\n    css_icon_class: string;\n    readableday: string;\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/darkskyapi-datapoint.model.ts","import { Component }                            from    '@angular/core';\nimport { NavController, NavParams }             from    'ionic-angular';\nimport { DarkSkyApiResponse }                   from    '../../models/darkskyapi-response.model';\nimport { DarkSkyApiDataPoint }                  from    '../../models/darkskyapi-datapoint.model';\nimport { IonicNativeGeoposition }               from    '../../models/ionicnative-geoposition.model';\nimport { DarkSkyApiService }                    from    '../../services/darkskyapi.service';\nimport { CONVERSION }                           from     \"../../shared/conversion.module\";\nimport { IconSetter } from '../../shared/icon-setter.module';\n\n@Component({\n  selector: 'page-capitalforecast',\n  templateUrl: 'capitalforecast.html'\n})\n\nexport class CapitalForecastPage {\n\n  capitalName: string = '';\n  currentPosition: IonicNativeGeoposition = new IonicNativeGeoposition();\n  currentForecast: DarkSkyApiDataPoint = new DarkSkyApiDataPoint();\n  forecastimage: string;\n\n  constructor(public navCtrl: NavController, navparams:NavParams ,private darkSkyApiService: DarkSkyApiService) {\n    this.currentPosition = navparams.get('position');\n    this.capitalName = navparams.get('name');\n\n    this.darkSkyApiService.getCurrentForecast(this.currentPosition)\n    .subscribe(\n      (fetched) =>  {\n        this.hydrate(fetched);\n      },\n      (error) => {\n        console.log('ERRROOOOOOOOOOOOOR !')\n      });\n  }\n\n  private hydrate(response : DarkSkyApiResponse) {\n      this.currentForecast = response.currently;\n      this.currentForecast.placeName = response.timezone;\n      this.currentForecast.apparentTemperature = CONVERSION.convertToCelsius(this.currentForecast.apparentTemperature);\n      this.currentForecast.temperature = CONVERSION.convertToCelsius(this.currentForecast.temperature);\n      IconSetter.setIconToEachForecast(this.currentForecast);\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/capitalforecast/capitalforecast.ts","import { Component, OnInit }                    from    '@angular/core';\nimport { NavController }                        from    'ionic-angular';\nimport { IonicNativeGeoposition }               from    '../../models/ionicnative-geoposition.model';\nimport { IonicNativeService }                   from    '../../services/ionicnative.service';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\n\nexport class HomePage implements OnInit {\n\n  constructor(public navCtrl: NavController, private ionicnativeservice:IonicNativeService) {}\n\n  ngOnInit() {\n    \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-contact',\n  templateUrl: 'contact.html'\n})\nexport class ContactPage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact/contact.ts","export const darksky = {\n    apiKey : '100648547e7aab78463fc9e5376031e6',\n    apiBaseUrl : 'https://api.darksky.net/forecast/',\n    defaultLanguage : 'fr'\n}\n\nexport const DarkSkyLanguages = {\n    French : 'fr',\n    English : 'en'\n}\n\n\n// WEBPACK FOOTER //\n// ./src/config/darksky.ts","import { DarkSkyApiDataPoint }              from    './darkskyapi-datapoint.model';\n/**\n * A data block object represents the various weather phenomena occurring over a period of time. \n */\nexport class DarkSkyApiDataBlock {\n\n    data: DarkSkyApiDataPoint[];\n    summary: string;\n    icon: string;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/darkskyapi-datablock.model.ts","import {DarkSkyApiDataPoint} from \"../models/darkskyapi-datapoint.model\";\n\n/**\n *\n */\n\nexport module IconSetter {\n\n    /**Fill the property icon_class with the right icon css class\n       * The css class is refered to weather-icon.css\n    */\n    export function setIconToEachForecast(element : DarkSkyApiDataPoint) {\n        switch (element.icon) {\n            case \"clear-day\":\n                element.css_icon_class = \"sunny\";\n                break;\n            case \"clear-night\":\n                element.css_icon_class = \"moon\";\n                break;\n            case \"rain\":\n                element.css_icon_class = \"rainy\";\n                break;\n            case \"snow\":\n                element.css_icon_class = \"snow\";\n                break;\n            case \"sleet\":\n                element.css_icon_class = \"\";\n                break;\n            case \"wind\":\n                element.css_icon_class = \"\";\n                break;\n            case \"fog\":\n                element.css_icon_class = \"\";\n                break;\n            case \"cloudy\":\n                element.css_icon_class = \"cloudy\";\n                break;\n            case \"partly-cloudy-day\":\n                element.css_icon_class = \"partly-sunny\";\n                break;\n            case \"partly-cloudy-night\":\n                element.css_icon_class = \"cloudy-night\";\n                break;\n            case \"hail\":\n                element.css_icon_class = \"\";\n                break;\n            case \"thunderstorm\":\n                element.css_icon_class = \"thunderstorm\";\n                break;\n            case \"tornado\":\n                element.css_icon_class = \"\";\n                break;\n            default:\n                break;\n        }\n\n        return element;\n    }\n\n    /**\n     * Returns the correspondant icon css class depending of the forecast descriptive string\n     * @param iconString Represents the forecast description\n     */\n    // Return FALSE !!! why ???\n    export function GetCssClassOfForecast(iconString : string) {\n        let cssClass : string;\n\n        switch (iconString) {\n            case \"clear-day\":\n                cssClass = \"sunny\";\n                break;\n            case \"clear-night\":\n                cssClass = \"moon\";\n                break;\n            case \"rain\":\n                cssClass = \"rainy\";\n                break;\n            case \"snow\":\n                cssClass = \"snow\";\n                break;\n            case \"sleet\":\n                cssClass = \"\";\n                break;\n            case \"wind\":\n                cssClass = \"\";\n                break;\n            case \"fog\":\n                cssClass = \"\";\n                break;\n            case \"cloudy\":\n                cssClass = \"cloudy\";\n                break;\n            case \"partly-cloudy-day\":\n                cssClass = \"partly-sunny\";\n                break;\n            case \"partly-cloudy-night\":\n                cssClass = \"cloudy-night\";\n                break;\n            case \"hail\":\n                cssClass = \"\";\n                break;\n            case \"thunderstorm\":\n                cssClass = \"thunderstorm\";\n                break;\n            case \"tornado\":\n                cssClass = \"\";\n                break;\n            default:\n                break;\n        }\n\n        return cssClass;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/shared/icon-setter.module.ts","import { NgModule } \t\t\tfrom '@angular/core';\nimport { IonicModule } \t\t\tfrom 'ionic-angular';\nimport { FormsModule } \t\t\tfrom '@angular/forms';\nimport { ForecastComponent } \tfrom './forecast/forecast';\nimport { OfflineMessageComponent } from './offline-message/offline-message';\n@NgModule({\n\tdeclarations: [ForecastComponent,\n    OfflineMessageComponent],\n\timports: [\n\t\tIonicModule,\n\t\tFormsModule\n\t],\n\texports: [ForecastComponent,\n    OfflineMessageComponent]\n})\nexport class ComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/components.module.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule }                from '@angular/platform-browser';\nimport { ErrorHandler, NgModule }       from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\n\nimport { MyApp }                        from './app.component';\nimport { HomePage }                     from '../pages/home/home';\nimport { ContactPage  }                 from  '../pages/contact/contact';\nimport { OtherPlacePage  }              from  '../pages/otherplaces/otherplaces'; \nimport { CapitalForecastPage }          from  '../pages/capitalforecast/capitalforecast';\n\nimport { StatusBar }                    from '@ionic-native/status-bar';\nimport { SplashScreen }                 from '@ionic-native/splash-screen';\nimport { Geolocation }                  from '@ionic-native/geolocation';\n\nimport { HttpClientModule }             from '@angular/common/http';\nimport { AngularFireModule }            from 'angularfire2';\nimport { AngularFireDatabaseModule, AngularFireDatabase } from 'angularfire2/database'; \n\nimport { DarkSkyApiService }            from '../services/darkskyapi.service';\nimport { IonicNativeService}            from '../services/ionicnative.service'\nimport { firebase }                     from '../config/firebase'\n\nimport { ComponentsModule }            from '../components/components.module';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    ContactPage,\n    OtherPlacePage,\n    CapitalForecastPage\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp),\n    AngularFireModule.initializeApp(firebase),\n    AngularFireDatabaseModule,\n    ComponentsModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    ContactPage,\n    OtherPlacePage,\n    CapitalForecastPage,\n  ],\n  providers: [\n    Geolocation,\n    DarkSkyApiService,\n    IonicNativeService,\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit }                    from '@angular/core';\nimport { NavController }                        from    'ionic-angular';\n\nimport { DarkSkyApiResponse }                   from    '../../models/darkskyapi-response.model';\nimport { DarkSkyApiDataPoint }                  from    '../../models/darkskyapi-datapoint.model';\nimport { DarkSkyApiDataBlock }                  from    '../../models/darkskyapi-datablock.model';\nimport { IonicNativeGeoposition }               from    '../../models/ionicnative-geoposition.model';\nimport { OtherPlacePage }                       from    '../../pages/otherplaces/otherplaces';\n//import { Network }                              from    '@ionic-native∕network';\nimport { IonicNativeService }                   from    '../../services/ionicnative.service';\nimport { DarkSkyApiService }                    from    '../../services/darkskyapi.service';\nimport { CONVERSION }                           from    \"../../shared/conversion.module\";\n\n/**\n * Generated class for the ForecastComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n@Component({\n  selector: 'forecast',\n  templateUrl: 'forecast.html'\n})\nexport class ForecastComponent {\n  \n  online: boolean = false;\n  response: DarkSkyApiResponse = new DarkSkyApiResponse();\n  currentPosition: IonicNativeGeoposition = new IonicNativeGeoposition();\n  currentForecast: DarkSkyApiDataPoint = new DarkSkyApiDataPoint();\n  hourlyForcastFornextTwoDays: DarkSkyApiDataBlock = new DarkSkyApiDataBlock();\n  forecastimage: string; //will store the location forecast picture\n\n  constructor(public navCtrl: NavController,\n    private darkSkyApiService: DarkSkyApiService,\n    private ionicnativeservice:IonicNativeService) {}\n    //private network: Network\n  \n  ngOnInit() {\n    if (this.online) {\n      this.getForecast(); \n    }    \n  }\n\n  /** Check the network state */\n  checkNetwork() {\n    // let networkState = this.network.type;\n\n    // if (networkState == 'none') {\n    //   this.online = false;\n    // }\n    // else {\n    //   this.online = true;\n    // } \n  }\n\n  getForecast() {\n    this.ionicnativeservice.loadCurrentLocation()\n    .then(fetched => { \n      this.currentPosition = fetched as IonicNativeGeoposition;\n      this.darkSkyApiService.getCurrentForecast(this.currentPosition)\n      .subscribe(\n        (data) => {\n          this.hydrate(data);\n          // Two behind is not working yet\n          this.setImageToForecast(data.currently.icon);\n          //console.log(this.forecastimage)\n      },\n      error => {\n        console.log('Something were wrong');\n      })\n    });\n\n  }\n\n  /** Put required values inside response to hydrate declared objects*/\n  private hydrate(response: DarkSkyApiResponse) {\n      this.currentForecast = response.currently;\n      // console.log(this.currentForecast)\n      this.currentForecast.apparentTemperature = CONVERSION.convertToCelsius(this.currentForecast.apparentTemperature);\n      this.currentForecast.temperature = CONVERSION.convertToCelsius(this.currentForecast.temperature);\n      this.currentForecast.placeName = this.response.timezone;\n      this.hourlyForcastFornextTwoDays = this.response.hourly;\n      \n      //console.log(this.hourlyForcastFornextTwoDays)\n  }\n\n  /**Set the right picture location to forecasimage according to the iconstring */\n  private setImageToForecast(iconstring: string ) {\n    switch (iconstring) {\n      case \"clear-day\":\n          this.forecastimage =  \"assets/img/cleary-day.png\"\n         //this.forecastimage = \"assets/img/sunny.png\";\n        break;\n      case \"clear-night\":\n        this.forecastimage = \"\";\n        break;\n      case \"rain\":\n        this.forecastimage = \"assets/img/rainy.png\";\n        break;\n      case \"snow\":\n        this.forecastimage = \"assets/img/snow.png\";\n        break;\n      case \"sleet\":\n        this.forecastimage = \"assets/img/sleet.png\";\n        break;\n      case \"wind\":\n        this.forecastimage = \"\";\n        break;\n      case \"fog\":\n        this.forecastimage = \"\";\n        break;\n      case \"cloudy\":\n        this.forecastimage = \"assets/img/cloudy-day.png\";\n        break;\n      case \"partly-cloudy-day\":\n        this.forecastimage = \"assets/img/partial-sunny.png\";\n        break;\n      case \"partly-cloudy-night\":\n        this.forecastimage = \"assets/img/cloud.png\";\n        break;\n      case \"hail\":\n        this.forecastimage = \"\";\n        break;\n      case \"thunderstorm\":\n        this.forecastimage = \"assets/img/thunderstorm.png\";\n        break;\n      case \"tornado\":\n        this.forecastimage = \"\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * SHow the page with all capitals list\n   */\n  public showOtherLocations() {\n    this.navCtrl.push(OtherPlacePage);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/forecast/forecast.ts","//Learn more on : https://darksky.net/dev/docs/response\n\nimport { DarkSkyApiDataPoint }              from    './darkskyapi-datapoint.model';\nimport { DarkSkyApiFlag }                   from    './darkskyapi-flag.model';\nimport { DarkSkyApiDataBlock }              from    './darkskyapi-datablock.model';\nimport { DarkSkyApiAlert }                  from    './darkskyapi-alert.model';\n\nexport class DarkSkyApiResponse {\n    \n    latitude: number;\n    longitude: number;\n    timezone: string;\n    \n    currently: DarkSkyApiDataPoint;\n    hourly: DarkSkyApiDataBlock;\n    daily: DarkSkyApiDataBlock;\n    minutly: DarkSkyApiDataBlock;\n    alerts: DarkSkyApiAlert[];\n    flags: DarkSkyApiFlag;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/darkskyapi-response.model.ts","export const CAPITALS = [ {\n    \"CapitalLatitude\" : \"9.55\",\n    \"CapitalLongitude\" : \"44.050000\",\n    \"CapitalName\" : \"Hargeisa\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"NULL\",\n    \"CountryName\" : \"Somaliland\"\n  }, {\n    \"CapitalLatitude\" : \"-54.283333\",\n    \"CapitalLongitude\" : \"-36.500000\",\n    \"CapitalName\" : \"King Edward Point\",\n    \"ContinentName\" : \"Antarctica\",\n    \"CountryCode\" : \"GS\",\n    \"CountryName\" : \"South Georgia and South Sandwich Islands\"\n  }, {\n    \"CapitalLatitude\" : \"-49.35\",\n    \"CapitalLongitude\" : \"70.216667\",\n    \"CapitalName\" : \"Port-aux-FranÃ§ais\",\n    \"ContinentName\" : \"Antarctica\",\n    \"CountryCode\" : \"TF\",\n    \"CountryName\" : \"French Southern and Antarctic Lands\"\n  }, {\n    \"CapitalLatitude\" : \"31.766666666666666\",\n    \"CapitalLongitude\" : \"35.233333\",\n    \"CapitalName\" : \"Jerusalem\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"PS\",\n    \"CountryName\" : \"Palestine\"\n  }, {\n    \"CapitalLatitude\" : \"60.116667\",\n    \"CapitalLongitude\" : \"19.900000\",\n    \"CapitalName\" : \"Mariehamn\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"AX\",\n    \"CountryName\" : \"Aland Islands\"\n  }, {\n    \"CapitalLatitude\" : \"-0.5477\",\n    \"CapitalLongitude\" : \"166.920867\",\n    \"CapitalName\" : \"Yaren\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"NR\",\n    \"CountryName\" : \"Nauru\"\n  }, {\n    \"CapitalLatitude\" : \"18.0731\",\n    \"CapitalLongitude\" : \"-63.082200\",\n    \"CapitalName\" : \"Marigot\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"MF\",\n    \"CountryName\" : \"Saint Martin\"\n  }, {\n    \"CapitalLatitude\" : \"-9.166667\",\n    \"CapitalLongitude\" : \"-171.833333\",\n    \"CapitalName\" : \"Atafu\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"TK\",\n    \"CountryName\" : \"Tokelau\"\n  }, {\n    \"CapitalLatitude\" : \"27.153611\",\n    \"CapitalLongitude\" : \"-13.203333\",\n    \"CapitalName\" : \"El-AaiÃºn\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"EH\",\n    \"CountryName\" : \"Western Sahara\"\n  }, {\n    \"CapitalLatitude\" : \"34.516666666666666\",\n    \"CapitalLongitude\" : \"69.183333\",\n    \"CapitalName\" : \"Kabul\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"AF\",\n    \"CountryName\" : \"Afghanistan\"\n  }, {\n    \"CapitalLatitude\" : \"41.31666666666667\",\n    \"CapitalLongitude\" : \"19.816667\",\n    \"CapitalName\" : \"Tirana\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"AL\",\n    \"CountryName\" : \"Albania\"\n  }, {\n    \"CapitalLatitude\" : \"36.75\",\n    \"CapitalLongitude\" : \"3.050000\",\n    \"CapitalName\" : \"Algiers\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"DZ\",\n    \"CountryName\" : \"Algeria\"\n  }, {\n    \"CapitalLatitude\" : \"-14.266666666666667\",\n    \"CapitalLongitude\" : \"-170.700000\",\n    \"CapitalName\" : \"Pago Pago\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"AS\",\n    \"CountryName\" : \"American Samoa\"\n  }, {\n    \"CapitalLatitude\" : \"42.5\",\n    \"CapitalLongitude\" : \"1.516667\",\n    \"CapitalName\" : \"Andorra la Vella\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"AD\",\n    \"CountryName\" : \"Andorra\"\n  }, {\n    \"CapitalLatitude\" : \"-8.833333333333334\",\n    \"CapitalLongitude\" : \"13.216667\",\n    \"CapitalName\" : \"Luanda\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"AO\",\n    \"CountryName\" : \"Angola\"\n  }, {\n    \"CapitalLatitude\" : \"18.216666666666665\",\n    \"CapitalLongitude\" : \"-63.050000\",\n    \"CapitalName\" : \"The Valley\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"AI\",\n    \"CountryName\" : \"Anguilla\"\n  }, {\n    \"CapitalLatitude\" : \"17.116666666666667\",\n    \"CapitalLongitude\" : \"-61.850000\",\n    \"CapitalName\" : \"Saint John's\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"AG\",\n    \"CountryName\" : \"Antigua and Barbuda\"\n  }, {\n    \"CapitalLatitude\" : \"-34.583333333333336\",\n    \"CapitalLongitude\" : \"-58.666667\",\n    \"CapitalName\" : \"Buenos Aires\",\n    \"ContinentName\" : \"South America\",\n    \"CountryCode\" : \"AR\",\n    \"CountryName\" : \"Argentina\"\n  }, {\n    \"CapitalLatitude\" : \"40.166666666666664\",\n    \"CapitalLongitude\" : \"44.500000\",\n    \"CapitalName\" : \"Yerevan\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"AM\",\n    \"CountryName\" : \"Armenia\"\n  }, {\n    \"CapitalLatitude\" : \"12.516666666666667\",\n    \"CapitalLongitude\" : \"-70.033333\",\n    \"CapitalName\" : \"Oranjestad\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"AW\",\n    \"CountryName\" : \"Aruba\"\n  }, {\n    \"CapitalLatitude\" : \"-35.266666666666666\",\n    \"CapitalLongitude\" : \"149.133333\",\n    \"CapitalName\" : \"Canberra\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"AU\",\n    \"CountryName\" : \"Australia\"\n  }, {\n    \"CapitalLatitude\" : \"48.2\",\n    \"CapitalLongitude\" : \"16.366667\",\n    \"CapitalName\" : \"Vienna\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"AT\",\n    \"CountryName\" : \"Austria\"\n  }, {\n    \"CapitalLatitude\" : \"40.38333333333333\",\n    \"CapitalLongitude\" : \"49.866667\",\n    \"CapitalName\" : \"Baku\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"AZ\",\n    \"CountryName\" : \"Azerbaijan\"\n  }, {\n    \"CapitalLatitude\" : \"25.083333333333332\",\n    \"CapitalLongitude\" : \"-77.350000\",\n    \"CapitalName\" : \"Nassau\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"BS\",\n    \"CountryName\" : \"Bahamas\"\n  }, {\n    \"CapitalLatitude\" : \"26.233333333333334\",\n    \"CapitalLongitude\" : \"50.566667\",\n    \"CapitalName\" : \"Manama\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"BH\",\n    \"CountryName\" : \"Bahrain\"\n  }, {\n    \"CapitalLatitude\" : \"23.716666666666665\",\n    \"CapitalLongitude\" : \"90.400000\",\n    \"CapitalName\" : \"Dhaka\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"BD\",\n    \"CountryName\" : \"Bangladesh\"\n  }, {\n    \"CapitalLatitude\" : \"13.1\",\n    \"CapitalLongitude\" : \"-59.616667\",\n    \"CapitalName\" : \"Bridgetown\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"BB\",\n    \"CountryName\" : \"Barbados\"\n  }, {\n    \"CapitalLatitude\" : \"53.9\",\n    \"CapitalLongitude\" : \"27.566667\",\n    \"CapitalName\" : \"Minsk\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"BY\",\n    \"CountryName\" : \"Belarus\"\n  }, {\n    \"CapitalLatitude\" : \"50.833333333333336\",\n    \"CapitalLongitude\" : \"4.333333\",\n    \"CapitalName\" : \"Brussels\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"BE\",\n    \"CountryName\" : \"Belgium\"\n  }, {\n    \"CapitalLatitude\" : \"17.25\",\n    \"CapitalLongitude\" : \"-88.766667\",\n    \"CapitalName\" : \"Belmopan\",\n    \"ContinentName\" : \"Central America\",\n    \"CountryCode\" : \"BZ\",\n    \"CountryName\" : \"Belize\"\n  }, {\n    \"CapitalLatitude\" : \"6.483333333333333\",\n    \"CapitalLongitude\" : \"2.616667\",\n    \"CapitalName\" : \"Porto-Novo\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"BJ\",\n    \"CountryName\" : \"Benin\"\n  }, {\n    \"CapitalLatitude\" : \"32.28333333333333\",\n    \"CapitalLongitude\" : \"-64.783333\",\n    \"CapitalName\" : \"Hamilton\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"BM\",\n    \"CountryName\" : \"Bermuda\"\n  }, {\n    \"CapitalLatitude\" : \"27.466666666666665\",\n    \"CapitalLongitude\" : \"89.633333\",\n    \"CapitalName\" : \"Thimphu\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"BT\",\n    \"CountryName\" : \"Bhutan\"\n  }, {\n    \"CapitalLatitude\" : \"-16.5\",\n    \"CapitalLongitude\" : \"-68.150000\",\n    \"CapitalName\" : \"La Paz\",\n    \"ContinentName\" : \"South America\",\n    \"CountryCode\" : \"BO\",\n    \"CountryName\" : \"Bolivia\"\n  }, {\n    \"CapitalLatitude\" : \"43.86666666666667\",\n    \"CapitalLongitude\" : \"18.416667\",\n    \"CapitalName\" : \"Sarajevo\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"BA\",\n    \"CountryName\" : \"Bosnia and Herzegovina\"\n  }, {\n    \"CapitalLatitude\" : \"-24.633333333333333\",\n    \"CapitalLongitude\" : \"25.900000\",\n    \"CapitalName\" : \"Gaborone\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"BW\",\n    \"CountryName\" : \"Botswana\"\n  }, {\n    \"CapitalLatitude\" : \"-15.783333333333333\",\n    \"CapitalLongitude\" : \"-47.916667\",\n    \"CapitalName\" : \"Brasilia\",\n    \"ContinentName\" : \"South America\",\n    \"CountryCode\" : \"BR\",\n    \"CountryName\" : \"Brazil\"\n  }, {\n    \"CapitalLatitude\" : \"18.416666666666668\",\n    \"CapitalLongitude\" : \"-64.616667\",\n    \"CapitalName\" : \"Road Town\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"VG\",\n    \"CountryName\" : \"British Virgin Islands\"\n  }, {\n    \"CapitalLatitude\" : \"4.883333333333333\",\n    \"CapitalLongitude\" : \"114.933333\",\n    \"CapitalName\" : \"Bandar Seri Begawan\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"BN\",\n    \"CountryName\" : \"Brunei Darussalam\"\n  }, {\n    \"CapitalLatitude\" : \"42.68333333333333\",\n    \"CapitalLongitude\" : \"23.316667\",\n    \"CapitalName\" : \"Sofia\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"BG\",\n    \"CountryName\" : \"Bulgaria\"\n  }, {\n    \"CapitalLatitude\" : \"12.366666666666667\",\n    \"CapitalLongitude\" : \"-1.516667\",\n    \"CapitalName\" : \"Ouagadougou\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"BF\",\n    \"CountryName\" : \"Burkina Faso\"\n  }, {\n    \"CapitalLatitude\" : \"16.8\",\n    \"CapitalLongitude\" : \"96.150000\",\n    \"CapitalName\" : \"Rangoon\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"MM\",\n    \"CountryName\" : \"Myanmar\"\n  }, {\n    \"CapitalLatitude\" : \"-3.3666666666666667\",\n    \"CapitalLongitude\" : \"29.350000\",\n    \"CapitalName\" : \"Bujumbura\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"BI\",\n    \"CountryName\" : \"Burundi\"\n  }, {\n    \"CapitalLatitude\" : \"11.55\",\n    \"CapitalLongitude\" : \"104.916667\",\n    \"CapitalName\" : \"Phnom Penh\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"KH\",\n    \"CountryName\" : \"Cambodia\"\n  }, {\n    \"CapitalLatitude\" : \"3.8666666666666667\",\n    \"CapitalLongitude\" : \"11.516667\",\n    \"CapitalName\" : \"Yaounde\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"CM\",\n    \"CountryName\" : \"Cameroon\"\n  }, {\n    \"CapitalLatitude\" : \"45.416666666666664\",\n    \"CapitalLongitude\" : \"-75.700000\",\n    \"CapitalName\" : \"Ottawa\",\n    \"ContinentName\" : \"Central America\",\n    \"CountryCode\" : \"CA\",\n    \"CountryName\" : \"Canada\"\n  }, {\n    \"CapitalLatitude\" : \"14.916666666666666\",\n    \"CapitalLongitude\" : \"-23.516667\",\n    \"CapitalName\" : \"Praia\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"CV\",\n    \"CountryName\" : \"Cape Verde\"\n  }, {\n    \"CapitalLatitude\" : \"19.3\",\n    \"CapitalLongitude\" : \"-81.383333\",\n    \"CapitalName\" : \"George Town\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"KY\",\n    \"CountryName\" : \"Cayman Islands\"\n  }, {\n    \"CapitalLatitude\" : \"4.366666666666666\",\n    \"CapitalLongitude\" : \"18.583333\",\n    \"CapitalName\" : \"Bangui\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"CF\",\n    \"CountryName\" : \"Central African Republic\"\n  }, {\n    \"CapitalLatitude\" : \"12.1\",\n    \"CapitalLongitude\" : \"15.033333\",\n    \"CapitalName\" : \"N'Djamena\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"TD\",\n    \"CountryName\" : \"Chad\"\n  }, {\n    \"CapitalLatitude\" : \"-33.45\",\n    \"CapitalLongitude\" : \"-70.666667\",\n    \"CapitalName\" : \"Santiago\",\n    \"ContinentName\" : \"South America\",\n    \"CountryCode\" : \"CL\",\n    \"CountryName\" : \"Chile\"\n  }, {\n    \"CapitalLatitude\" : \"39.916666666666664\",\n    \"CapitalLongitude\" : \"116.383333\",\n    \"CapitalName\" : \"Beijing\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"CN\",\n    \"CountryName\" : \"China\"\n  }, {\n    \"CapitalLatitude\" : \"-10.416666666666666\",\n    \"CapitalLongitude\" : \"105.716667\",\n    \"CapitalName\" : \"The Settlement\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"CX\",\n    \"CountryName\" : \"Christmas Island\"\n  }, {\n    \"CapitalLatitude\" : \"-12.166666666666666\",\n    \"CapitalLongitude\" : \"96.833333\",\n    \"CapitalName\" : \"West Island\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"CC\",\n    \"CountryName\" : \"Cocos Islands\"\n  }, {\n    \"CapitalLatitude\" : \"4.6\",\n    \"CapitalLongitude\" : \"-74.083333\",\n    \"CapitalName\" : \"Bogota\",\n    \"ContinentName\" : \"South America\",\n    \"CountryCode\" : \"CO\",\n    \"CountryName\" : \"Colombia\"\n  }, {\n    \"CapitalLatitude\" : \"-11.7\",\n    \"CapitalLongitude\" : \"43.233333\",\n    \"CapitalName\" : \"Moroni\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"KM\",\n    \"CountryName\" : \"Comoros\"\n  }, {\n    \"CapitalLatitude\" : \"-4.316666666666666\",\n    \"CapitalLongitude\" : \"15.300000\",\n    \"CapitalName\" : \"Kinshasa\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"CD\",\n    \"CountryName\" : \"Democratic Republic of the Congo\"\n  }, {\n    \"CapitalLatitude\" : \"-4.25\",\n    \"CapitalLongitude\" : \"15.283333\",\n    \"CapitalName\" : \"Brazzaville\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"CG\",\n    \"CountryName\" : \"Republic of Congo\"\n  }, {\n    \"CapitalLatitude\" : \"-21.2\",\n    \"CapitalLongitude\" : \"-159.766667\",\n    \"CapitalName\" : \"Avarua\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"CK\",\n    \"CountryName\" : \"Cook Islands\"\n  }, {\n    \"CapitalLatitude\" : \"9.933333333333334\",\n    \"CapitalLongitude\" : \"-84.083333\",\n    \"CapitalName\" : \"San Jose\",\n    \"ContinentName\" : \"Central America\",\n    \"CountryCode\" : \"CR\",\n    \"CountryName\" : \"Costa Rica\"\n  }, {\n    \"CapitalLatitude\" : \"6.816666666666666\",\n    \"CapitalLongitude\" : \"-5.266667\",\n    \"CapitalName\" : \"Yamoussoukro\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"CI\",\n    \"CountryName\" : \"Cote d'Ivoire\"\n  }, {\n    \"CapitalLatitude\" : \"45.8\",\n    \"CapitalLongitude\" : \"16.000000\",\n    \"CapitalName\" : \"Zagreb\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"HR\",\n    \"CountryName\" : \"Croatia\"\n  }, {\n    \"CapitalLatitude\" : \"23.116666666666667\",\n    \"CapitalLongitude\" : \"-82.350000\",\n    \"CapitalName\" : \"Havana\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"CU\",\n    \"CountryName\" : \"Cuba\"\n  }, {\n    \"CapitalLatitude\" : \"12.1\",\n    \"CapitalLongitude\" : \"-68.916667\",\n    \"CapitalName\" : \"Willemstad\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"CW\",\n    \"CountryName\" : \"CuraÃ§ao\"\n  }, {\n    \"CapitalLatitude\" : \"35.166666666666664\",\n    \"CapitalLongitude\" : \"33.366667\",\n    \"CapitalName\" : \"Nicosia\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"CY\",\n    \"CountryName\" : \"Cyprus\"\n  }, {\n    \"CapitalLatitude\" : \"50.083333333333336\",\n    \"CapitalLongitude\" : \"14.466667\",\n    \"CapitalName\" : \"Prague\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"CZ\",\n    \"CountryName\" : \"Czech Republic\"\n  }, {\n    \"CapitalLatitude\" : \"55.666666666666664\",\n    \"CapitalLongitude\" : \"12.583333\",\n    \"CapitalName\" : \"Copenhagen\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"DK\",\n    \"CountryName\" : \"Denmark\"\n  }, {\n    \"CapitalLatitude\" : \"11.583333333333334\",\n    \"CapitalLongitude\" : \"43.150000\",\n    \"CapitalName\" : \"Djibouti\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"DJ\",\n    \"CountryName\" : \"Djibouti\"\n  }, {\n    \"CapitalLatitude\" : \"15.3\",\n    \"CapitalLongitude\" : \"-61.400000\",\n    \"CapitalName\" : \"Roseau\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"DM\",\n    \"CountryName\" : \"Dominica\"\n  }, {\n    \"CapitalLatitude\" : \"18.466666666666665\",\n    \"CapitalLongitude\" : \"-69.900000\",\n    \"CapitalName\" : \"Santo Domingo\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"DO\",\n    \"CountryName\" : \"Dominican Republic\"\n  }, {\n    \"CapitalLatitude\" : \"-0.21666666666666667\",\n    \"CapitalLongitude\" : \"-78.500000\",\n    \"CapitalName\" : \"Quito\",\n    \"ContinentName\" : \"South America\",\n    \"CountryCode\" : \"EC\",\n    \"CountryName\" : \"Ecuador\"\n  }, {\n    \"CapitalLatitude\" : \"30.05\",\n    \"CapitalLongitude\" : \"31.250000\",\n    \"CapitalName\" : \"Cairo\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"EG\",\n    \"CountryName\" : \"Egypt\"\n  }, {\n    \"CapitalLatitude\" : \"13.7\",\n    \"CapitalLongitude\" : \"-89.200000\",\n    \"CapitalName\" : \"San Salvador\",\n    \"ContinentName\" : \"Central America\",\n    \"CountryCode\" : \"SV\",\n    \"CountryName\" : \"El Salvador\"\n  }, {\n    \"CapitalLatitude\" : \"3.75\",\n    \"CapitalLongitude\" : \"8.783333\",\n    \"CapitalName\" : \"Malabo\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"GQ\",\n    \"CountryName\" : \"Equatorial Guinea\"\n  }, {\n    \"CapitalLatitude\" : \"15.333333333333334\",\n    \"CapitalLongitude\" : \"38.933333\",\n    \"CapitalName\" : \"Asmara\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"ER\",\n    \"CountryName\" : \"Eritrea\"\n  }, {\n    \"CapitalLatitude\" : \"59.43333333333333\",\n    \"CapitalLongitude\" : \"24.716667\",\n    \"CapitalName\" : \"Tallinn\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"EE\",\n    \"CountryName\" : \"Estonia\"\n  }, {\n    \"CapitalLatitude\" : \"9.033333333333333\",\n    \"CapitalLongitude\" : \"38.700000\",\n    \"CapitalName\" : \"Addis Ababa\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"ET\",\n    \"CountryName\" : \"Ethiopia\"\n  }, {\n    \"CapitalLatitude\" : \"-51.7\",\n    \"CapitalLongitude\" : \"-57.850000\",\n    \"CapitalName\" : \"Stanley\",\n    \"ContinentName\" : \"South America\",\n    \"CountryCode\" : \"FK\",\n    \"CountryName\" : \"Falkland Islands\"\n  }, {\n    \"CapitalLatitude\" : \"62\",\n    \"CapitalLongitude\" : \"-6.766667\",\n    \"CapitalName\" : \"Torshavn\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"FO\",\n    \"CountryName\" : \"Faroe Islands\"\n  }, {\n    \"CapitalLatitude\" : \"-18.133333333333333\",\n    \"CapitalLongitude\" : \"178.416667\",\n    \"CapitalName\" : \"Suva\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"FJ\",\n    \"CountryName\" : \"Fiji\"\n  }, {\n    \"CapitalLatitude\" : \"60.166666666666664\",\n    \"CapitalLongitude\" : \"24.933333\",\n    \"CapitalName\" : \"Helsinki\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"FI\",\n    \"CountryName\" : \"Finland\"\n  }, {\n    \"CapitalLatitude\" : \"48.86666666666667\",\n    \"CapitalLongitude\" : \"2.333333\",\n    \"CapitalName\" : \"Paris\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"FR\",\n    \"CountryName\" : \"France\"\n  }, {\n    \"CapitalLatitude\" : \"-17.533333333333335\",\n    \"CapitalLongitude\" : \"-149.566667\",\n    \"CapitalName\" : \"Papeete\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"PF\",\n    \"CountryName\" : \"French Polynesia\"\n  }, {\n    \"CapitalLatitude\" : \"0.38333333333333336\",\n    \"CapitalLongitude\" : \"9.450000\",\n    \"CapitalName\" : \"Libreville\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"GA\",\n    \"CountryName\" : \"Gabon\"\n  }, {\n    \"CapitalLatitude\" : \"13.45\",\n    \"CapitalLongitude\" : \"-16.566667\",\n    \"CapitalName\" : \"Banjul\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"GM\",\n    \"CountryName\" : \"The Gambia\"\n  }, {\n    \"CapitalLatitude\" : \"41.68333333333333\",\n    \"CapitalLongitude\" : \"44.833333\",\n    \"CapitalName\" : \"Tbilisi\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"GE\",\n    \"CountryName\" : \"Georgia\"\n  }, {\n    \"CapitalLatitude\" : \"52.516666666666666\",\n    \"CapitalLongitude\" : \"13.400000\",\n    \"CapitalName\" : \"Berlin\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"DE\",\n    \"CountryName\" : \"Germany\"\n  }, {\n    \"CapitalLatitude\" : \"5.55\",\n    \"CapitalLongitude\" : \"-0.216667\",\n    \"CapitalName\" : \"Accra\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"GH\",\n    \"CountryName\" : \"Ghana\"\n  }, {\n    \"CapitalLatitude\" : \"36.13333333333333\",\n    \"CapitalLongitude\" : \"-5.350000\",\n    \"CapitalName\" : \"Gibraltar\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"GI\",\n    \"CountryName\" : \"Gibraltar\"\n  }, {\n    \"CapitalLatitude\" : \"37.983333333333334\",\n    \"CapitalLongitude\" : \"23.733333\",\n    \"CapitalName\" : \"Athens\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"GR\",\n    \"CountryName\" : \"Greece\"\n  }, {\n    \"CapitalLatitude\" : \"64.18333333333334\",\n    \"CapitalLongitude\" : \"-51.750000\",\n    \"CapitalName\" : \"Nuuk\",\n    \"ContinentName\" : \"Central America\",\n    \"CountryCode\" : \"GL\",\n    \"CountryName\" : \"Greenland\"\n  }, {\n    \"CapitalLatitude\" : \"12.05\",\n    \"CapitalLongitude\" : \"-61.750000\",\n    \"CapitalName\" : \"Saint George's\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"GD\",\n    \"CountryName\" : \"Grenada\"\n  }, {\n    \"CapitalLatitude\" : \"13.466666666666667\",\n    \"CapitalLongitude\" : \"144.733333\",\n    \"CapitalName\" : \"Hagatna\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"GU\",\n    \"CountryName\" : \"Guam\"\n  }, {\n    \"CapitalLatitude\" : \"14.616666666666667\",\n    \"CapitalLongitude\" : \"-90.516667\",\n    \"CapitalName\" : \"Guatemala City\",\n    \"ContinentName\" : \"Central America\",\n    \"CountryCode\" : \"GT\",\n    \"CountryName\" : \"Guatemala\"\n  }, {\n    \"CapitalLatitude\" : \"49.45\",\n    \"CapitalLongitude\" : \"-2.533333\",\n    \"CapitalName\" : \"Saint Peter Port\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"GG\",\n    \"CountryName\" : \"Guernsey\"\n  }, {\n    \"CapitalLatitude\" : \"9.5\",\n    \"CapitalLongitude\" : \"-13.700000\",\n    \"CapitalName\" : \"Conakry\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"GN\",\n    \"CountryName\" : \"Guinea\"\n  }, {\n    \"CapitalLatitude\" : \"11.85\",\n    \"CapitalLongitude\" : \"-15.583333\",\n    \"CapitalName\" : \"Bissau\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"GW\",\n    \"CountryName\" : \"Guinea-Bissau\"\n  }, {\n    \"CapitalLatitude\" : \"6.8\",\n    \"CapitalLongitude\" : \"-58.150000\",\n    \"CapitalName\" : \"Georgetown\",\n    \"ContinentName\" : \"South America\",\n    \"CountryCode\" : \"GY\",\n    \"CountryName\" : \"Guyana\"\n  }, {\n    \"CapitalLatitude\" : \"18.533333333333335\",\n    \"CapitalLongitude\" : \"-72.333333\",\n    \"CapitalName\" : \"Port-au-Prince\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"HT\",\n    \"CountryName\" : \"Haiti\"\n  }, {\n    \"CapitalLatitude\" : \"41.9\",\n    \"CapitalLongitude\" : \"12.450000\",\n    \"CapitalName\" : \"Vatican City\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"VA\",\n    \"CountryName\" : \"Vatican City\"\n  }, {\n    \"CapitalLatitude\" : \"14.1\",\n    \"CapitalLongitude\" : \"-87.216667\",\n    \"CapitalName\" : \"Tegucigalpa\",\n    \"ContinentName\" : \"Central America\",\n    \"CountryCode\" : \"HN\",\n    \"CountryName\" : \"Honduras\"\n  }, {\n    \"CapitalLatitude\" : \"47.5\",\n    \"CapitalLongitude\" : \"19.083333\",\n    \"CapitalName\" : \"Budapest\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"HU\",\n    \"CountryName\" : \"Hungary\"\n  }, {\n    \"CapitalLatitude\" : \"64.15\",\n    \"CapitalLongitude\" : \"-21.950000\",\n    \"CapitalName\" : \"Reykjavik\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"IS\",\n    \"CountryName\" : \"Iceland\"\n  }, {\n    \"CapitalLatitude\" : \"28.6\",\n    \"CapitalLongitude\" : \"77.200000\",\n    \"CapitalName\" : \"New Delhi\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"IN\",\n    \"CountryName\" : \"India\"\n  }, {\n    \"CapitalLatitude\" : \"-6.166666666666667\",\n    \"CapitalLongitude\" : \"106.816667\",\n    \"CapitalName\" : \"Jakarta\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"ID\",\n    \"CountryName\" : \"Indonesia\"\n  }, {\n    \"CapitalLatitude\" : \"35.7\",\n    \"CapitalLongitude\" : \"51.416667\",\n    \"CapitalName\" : \"Tehran\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"IR\",\n    \"CountryName\" : \"Iran\"\n  }, {\n    \"CapitalLatitude\" : \"33.333333333333336\",\n    \"CapitalLongitude\" : \"44.400000\",\n    \"CapitalName\" : \"Baghdad\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"IQ\",\n    \"CountryName\" : \"Iraq\"\n  }, {\n    \"CapitalLatitude\" : \"53.31666666666667\",\n    \"CapitalLongitude\" : \"-6.233333\",\n    \"CapitalName\" : \"Dublin\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"IE\",\n    \"CountryName\" : \"Ireland\"\n  }, {\n    \"CapitalLatitude\" : \"54.15\",\n    \"CapitalLongitude\" : \"-4.483333\",\n    \"CapitalName\" : \"Douglas\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"IM\",\n    \"CountryName\" : \"Isle of Man\"\n  }, {\n    \"CapitalLatitude\" : \"31.766666666666666\",\n    \"CapitalLongitude\" : \"35.233333\",\n    \"CapitalName\" : \"Jerusalem\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"IL\",\n    \"CountryName\" : \"Israel\"\n  }, {\n    \"CapitalLatitude\" : \"41.9\",\n    \"CapitalLongitude\" : \"12.483333\",\n    \"CapitalName\" : \"Rome\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"IT\",\n    \"CountryName\" : \"Italy\"\n  }, {\n    \"CapitalLatitude\" : \"18\",\n    \"CapitalLongitude\" : \"-76.800000\",\n    \"CapitalName\" : \"Kingston\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"JM\",\n    \"CountryName\" : \"Jamaica\"\n  }, {\n    \"CapitalLatitude\" : \"35.68333333333333\",\n    \"CapitalLongitude\" : \"139.750000\",\n    \"CapitalName\" : \"Tokyo\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"JP\",\n    \"CountryName\" : \"Japan\"\n  }, {\n    \"CapitalLatitude\" : \"49.18333333333333\",\n    \"CapitalLongitude\" : \"-2.100000\",\n    \"CapitalName\" : \"Saint Helier\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"JE\",\n    \"CountryName\" : \"Jersey\"\n  }, {\n    \"CapitalLatitude\" : \"31.95\",\n    \"CapitalLongitude\" : \"35.933333\",\n    \"CapitalName\" : \"Amman\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"JO\",\n    \"CountryName\" : \"Jordan\"\n  }, {\n    \"CapitalLatitude\" : \"51.166666666666664\",\n    \"CapitalLongitude\" : \"71.416667\",\n    \"CapitalName\" : \"Astana\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"KZ\",\n    \"CountryName\" : \"Kazakhstan\"\n  }, {\n    \"CapitalLatitude\" : \"-1.2833333333333332\",\n    \"CapitalLongitude\" : \"36.816667\",\n    \"CapitalName\" : \"Nairobi\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"KE\",\n    \"CountryName\" : \"Kenya\"\n  }, {\n    \"CapitalLatitude\" : \"-0.8833333333333333\",\n    \"CapitalLongitude\" : \"169.533333\",\n    \"CapitalName\" : \"Tarawa\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"KI\",\n    \"CountryName\" : \"Kiribati\"\n  }, {\n    \"CapitalLatitude\" : \"39.016666666666666\",\n    \"CapitalLongitude\" : \"125.750000\",\n    \"CapitalName\" : \"Pyongyang\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"KP\",\n    \"CountryName\" : \"North Korea\"\n  }, {\n    \"CapitalLatitude\" : \"37.55\",\n    \"CapitalLongitude\" : \"126.983333\",\n    \"CapitalName\" : \"Seoul\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"KR\",\n    \"CountryName\" : \"South Korea\"\n  }, {\n    \"CapitalLatitude\" : \"42.666666666666664\",\n    \"CapitalLongitude\" : \"21.166667\",\n    \"CapitalName\" : \"Pristina\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"KO\",\n    \"CountryName\" : \"Kosovo\"\n  }, {\n    \"CapitalLatitude\" : \"29.366666666666667\",\n    \"CapitalLongitude\" : \"47.966667\",\n    \"CapitalName\" : \"Kuwait City\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"KW\",\n    \"CountryName\" : \"Kuwait\"\n  }, {\n    \"CapitalLatitude\" : \"42.86666666666667\",\n    \"CapitalLongitude\" : \"74.600000\",\n    \"CapitalName\" : \"Bishkek\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"KG\",\n    \"CountryName\" : \"Kyrgyzstan\"\n  }, {\n    \"CapitalLatitude\" : \"17.966666666666665\",\n    \"CapitalLongitude\" : \"102.600000\",\n    \"CapitalName\" : \"Vientiane\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"LA\",\n    \"CountryName\" : \"Laos\"\n  }, {\n    \"CapitalLatitude\" : \"56.95\",\n    \"CapitalLongitude\" : \"24.100000\",\n    \"CapitalName\" : \"Riga\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"LV\",\n    \"CountryName\" : \"Latvia\"\n  }, {\n    \"CapitalLatitude\" : \"33.86666666666667\",\n    \"CapitalLongitude\" : \"35.500000\",\n    \"CapitalName\" : \"Beirut\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"LB\",\n    \"CountryName\" : \"Lebanon\"\n  }, {\n    \"CapitalLatitude\" : \"-29.316666666666666\",\n    \"CapitalLongitude\" : \"27.483333\",\n    \"CapitalName\" : \"Maseru\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"LS\",\n    \"CountryName\" : \"Lesotho\"\n  }, {\n    \"CapitalLatitude\" : \"6.3\",\n    \"CapitalLongitude\" : \"-10.800000\",\n    \"CapitalName\" : \"Monrovia\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"LR\",\n    \"CountryName\" : \"Liberia\"\n  }, {\n    \"CapitalLatitude\" : \"32.88333333333333\",\n    \"CapitalLongitude\" : \"13.166667\",\n    \"CapitalName\" : \"Tripoli\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"LY\",\n    \"CountryName\" : \"Libya\"\n  }, {\n    \"CapitalLatitude\" : \"47.13333333333333\",\n    \"CapitalLongitude\" : \"9.516667\",\n    \"CapitalName\" : \"Vaduz\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"LI\",\n    \"CountryName\" : \"Liechtenstein\"\n  }, {\n    \"CapitalLatitude\" : \"54.68333333333333\",\n    \"CapitalLongitude\" : \"25.316667\",\n    \"CapitalName\" : \"Vilnius\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"LT\",\n    \"CountryName\" : \"Lithuania\"\n  }, {\n    \"CapitalLatitude\" : \"49.6\",\n    \"CapitalLongitude\" : \"6.116667\",\n    \"CapitalName\" : \"Luxembourg\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"LU\",\n    \"CountryName\" : \"Luxembourg\"\n  }, {\n    \"CapitalLatitude\" : \"42\",\n    \"CapitalLongitude\" : \"21.433333\",\n    \"CapitalName\" : \"Skopje\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"MK\",\n    \"CountryName\" : \"Macedonia\"\n  }, {\n    \"CapitalLatitude\" : \"-18.916666666666668\",\n    \"CapitalLongitude\" : \"47.516667\",\n    \"CapitalName\" : \"Antananarivo\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"MG\",\n    \"CountryName\" : \"Madagascar\"\n  }, {\n    \"CapitalLatitude\" : \"-13.966666666666667\",\n    \"CapitalLongitude\" : \"33.783333\",\n    \"CapitalName\" : \"Lilongwe\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"MW\",\n    \"CountryName\" : \"Malawi\"\n  }, {\n    \"CapitalLatitude\" : \"3.1666666666666665\",\n    \"CapitalLongitude\" : \"101.700000\",\n    \"CapitalName\" : \"Kuala Lumpur\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"MY\",\n    \"CountryName\" : \"Malaysia\"\n  }, {\n    \"CapitalLatitude\" : \"4.166666666666667\",\n    \"CapitalLongitude\" : \"73.500000\",\n    \"CapitalName\" : \"Male\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"MV\",\n    \"CountryName\" : \"Maldives\"\n  }, {\n    \"CapitalLatitude\" : \"12.65\",\n    \"CapitalLongitude\" : \"-8.000000\",\n    \"CapitalName\" : \"Bamako\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"ML\",\n    \"CountryName\" : \"Mali\"\n  }, {\n    \"CapitalLatitude\" : \"35.88333333333333\",\n    \"CapitalLongitude\" : \"14.500000\",\n    \"CapitalName\" : \"Valletta\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"MT\",\n    \"CountryName\" : \"Malta\"\n  }, {\n    \"CapitalLatitude\" : \"7.1\",\n    \"CapitalLongitude\" : \"171.383333\",\n    \"CapitalName\" : \"Majuro\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"MH\",\n    \"CountryName\" : \"Marshall Islands\"\n  }, {\n    \"CapitalLatitude\" : \"18.066666666666666\",\n    \"CapitalLongitude\" : \"-15.966667\",\n    \"CapitalName\" : \"Nouakchott\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"MR\",\n    \"CountryName\" : \"Mauritania\"\n  }, {\n    \"CapitalLatitude\" : \"-20.15\",\n    \"CapitalLongitude\" : \"57.483333\",\n    \"CapitalName\" : \"Port Louis\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"MU\",\n    \"CountryName\" : \"Mauritius\"\n  }, {\n    \"CapitalLatitude\" : \"19.433333333333334\",\n    \"CapitalLongitude\" : \"-99.133333\",\n    \"CapitalName\" : \"Mexico City\",\n    \"ContinentName\" : \"Central America\",\n    \"CountryCode\" : \"MX\",\n    \"CountryName\" : \"Mexico\"\n  }, {\n    \"CapitalLatitude\" : \"6.916666666666667\",\n    \"CapitalLongitude\" : \"158.150000\",\n    \"CapitalName\" : \"Palikir\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"FM\",\n    \"CountryName\" : \"Federated States of Micronesia\"\n  }, {\n    \"CapitalLatitude\" : \"47\",\n    \"CapitalLongitude\" : \"28.850000\",\n    \"CapitalName\" : \"Chisinau\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"MD\",\n    \"CountryName\" : \"Moldova\"\n  }, {\n    \"CapitalLatitude\" : \"43.733333333333334\",\n    \"CapitalLongitude\" : \"7.416667\",\n    \"CapitalName\" : \"Monaco\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"MC\",\n    \"CountryName\" : \"Monaco\"\n  }, {\n    \"CapitalLatitude\" : \"47.916666666666664\",\n    \"CapitalLongitude\" : \"106.916667\",\n    \"CapitalName\" : \"Ulaanbaatar\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"MN\",\n    \"CountryName\" : \"Mongolia\"\n  }, {\n    \"CapitalLatitude\" : \"42.43333333333333\",\n    \"CapitalLongitude\" : \"19.266667\",\n    \"CapitalName\" : \"Podgorica\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"ME\",\n    \"CountryName\" : \"Montenegro\"\n  }, {\n    \"CapitalLatitude\" : \"16.7\",\n    \"CapitalLongitude\" : \"-62.216667\",\n    \"CapitalName\" : \"Plymouth\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"MS\",\n    \"CountryName\" : \"Montserrat\"\n  }, {\n    \"CapitalLatitude\" : \"34.016666666666666\",\n    \"CapitalLongitude\" : \"-6.816667\",\n    \"CapitalName\" : \"Rabat\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"MA\",\n    \"CountryName\" : \"Morocco\"\n  }, {\n    \"CapitalLatitude\" : \"-25.95\",\n    \"CapitalLongitude\" : \"32.583333\",\n    \"CapitalName\" : \"Maputo\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"MZ\",\n    \"CountryName\" : \"Mozambique\"\n  }, {\n    \"CapitalLatitude\" : \"-22.566666666666666\",\n    \"CapitalLongitude\" : \"17.083333\",\n    \"CapitalName\" : \"Windhoek\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"NA\",\n    \"CountryName\" : \"Namibia\"\n  }, {\n    \"CapitalLatitude\" : \"27.716666666666665\",\n    \"CapitalLongitude\" : \"85.316667\",\n    \"CapitalName\" : \"Kathmandu\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"NP\",\n    \"CountryName\" : \"Nepal\"\n  }, {\n    \"CapitalLatitude\" : \"52.35\",\n    \"CapitalLongitude\" : \"4.916667\",\n    \"CapitalName\" : \"Amsterdam\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"NL\",\n    \"CountryName\" : \"Netherlands\"\n  }, {\n    \"CapitalLatitude\" : \"-22.266666666666666\",\n    \"CapitalLongitude\" : \"166.450000\",\n    \"CapitalName\" : \"Noumea\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"NC\",\n    \"CountryName\" : \"New Caledonia\"\n  }, {\n    \"CapitalLatitude\" : \"-41.3\",\n    \"CapitalLongitude\" : \"174.783333\",\n    \"CapitalName\" : \"Wellington\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"NZ\",\n    \"CountryName\" : \"New Zealand\"\n  }, {\n    \"CapitalLatitude\" : \"12.133333333333333\",\n    \"CapitalLongitude\" : \"-86.250000\",\n    \"CapitalName\" : \"Managua\",\n    \"ContinentName\" : \"Central America\",\n    \"CountryCode\" : \"NI\",\n    \"CountryName\" : \"Nicaragua\"\n  }, {\n    \"CapitalLatitude\" : \"13.516666666666667\",\n    \"CapitalLongitude\" : \"2.116667\",\n    \"CapitalName\" : \"Niamey\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"NE\",\n    \"CountryName\" : \"Niger\"\n  }, {\n    \"CapitalLatitude\" : \"9.083333333333334\",\n    \"CapitalLongitude\" : \"7.533333\",\n    \"CapitalName\" : \"Abuja\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"NG\",\n    \"CountryName\" : \"Nigeria\"\n  }, {\n    \"CapitalLatitude\" : \"-19.016666666666666\",\n    \"CapitalLongitude\" : \"-169.916667\",\n    \"CapitalName\" : \"Alofi\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"NU\",\n    \"CountryName\" : \"Niue\"\n  }, {\n    \"CapitalLatitude\" : \"-29.05\",\n    \"CapitalLongitude\" : \"167.966667\",\n    \"CapitalName\" : \"Kingston\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"NF\",\n    \"CountryName\" : \"Norfolk Island\"\n  }, {\n    \"CapitalLatitude\" : \"15.2\",\n    \"CapitalLongitude\" : \"145.750000\",\n    \"CapitalName\" : \"Saipan\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"MP\",\n    \"CountryName\" : \"Northern Mariana Islands\"\n  }, {\n    \"CapitalLatitude\" : \"59.916666666666664\",\n    \"CapitalLongitude\" : \"10.750000\",\n    \"CapitalName\" : \"Oslo\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"NO\",\n    \"CountryName\" : \"Norway\"\n  }, {\n    \"CapitalLatitude\" : \"23.616666666666667\",\n    \"CapitalLongitude\" : \"58.583333\",\n    \"CapitalName\" : \"Muscat\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"OM\",\n    \"CountryName\" : \"Oman\"\n  }, {\n    \"CapitalLatitude\" : \"33.68333333333333\",\n    \"CapitalLongitude\" : \"73.050000\",\n    \"CapitalName\" : \"Islamabad\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"PK\",\n    \"CountryName\" : \"Pakistan\"\n  }, {\n    \"CapitalLatitude\" : \"7.483333333333333\",\n    \"CapitalLongitude\" : \"134.633333\",\n    \"CapitalName\" : \"Melekeok\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"PW\",\n    \"CountryName\" : \"Palau\"\n  }, {\n    \"CapitalLatitude\" : \"8.966666666666667\",\n    \"CapitalLongitude\" : \"-79.533333\",\n    \"CapitalName\" : \"Panama City\",\n    \"ContinentName\" : \"Central America\",\n    \"CountryCode\" : \"PA\",\n    \"CountryName\" : \"Panama\"\n  }, {\n    \"CapitalLatitude\" : \"-9.45\",\n    \"CapitalLongitude\" : \"147.183333\",\n    \"CapitalName\" : \"Port Moresby\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"PG\",\n    \"CountryName\" : \"Papua New Guinea\"\n  }, {\n    \"CapitalLatitude\" : \"-25.266666666666666\",\n    \"CapitalLongitude\" : \"-57.666667\",\n    \"CapitalName\" : \"Asuncion\",\n    \"ContinentName\" : \"South America\",\n    \"CountryCode\" : \"PY\",\n    \"CountryName\" : \"Paraguay\"\n  }, {\n    \"CapitalLatitude\" : \"-12.05\",\n    \"CapitalLongitude\" : \"-77.050000\",\n    \"CapitalName\" : \"Lima\",\n    \"ContinentName\" : \"South America\",\n    \"CountryCode\" : \"PE\",\n    \"CountryName\" : \"Peru\"\n  }, {\n    \"CapitalLatitude\" : \"14.6\",\n    \"CapitalLongitude\" : \"120.966667\",\n    \"CapitalName\" : \"Manila\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"PH\",\n    \"CountryName\" : \"Philippines\"\n  }, {\n    \"CapitalLatitude\" : \"-25.066666666666666\",\n    \"CapitalLongitude\" : \"-130.083333\",\n    \"CapitalName\" : \"Adamstown\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"PN\",\n    \"CountryName\" : \"Pitcairn Islands\"\n  }, {\n    \"CapitalLatitude\" : \"52.25\",\n    \"CapitalLongitude\" : \"21.000000\",\n    \"CapitalName\" : \"Warsaw\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"PL\",\n    \"CountryName\" : \"Poland\"\n  }, {\n    \"CapitalLatitude\" : \"38.71666666666667\",\n    \"CapitalLongitude\" : \"-9.133333\",\n    \"CapitalName\" : \"Lisbon\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"PT\",\n    \"CountryName\" : \"Portugal\"\n  }, {\n    \"CapitalLatitude\" : \"18.466666666666665\",\n    \"CapitalLongitude\" : \"-66.116667\",\n    \"CapitalName\" : \"San Juan\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"PR\",\n    \"CountryName\" : \"Puerto Rico\"\n  }, {\n    \"CapitalLatitude\" : \"25.283333333333335\",\n    \"CapitalLongitude\" : \"51.533333\",\n    \"CapitalName\" : \"Doha\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"QA\",\n    \"CountryName\" : \"Qatar\"\n  }, {\n    \"CapitalLatitude\" : \"44.43333333333333\",\n    \"CapitalLongitude\" : \"26.100000\",\n    \"CapitalName\" : \"Bucharest\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"RO\",\n    \"CountryName\" : \"Romania\"\n  }, {\n    \"CapitalLatitude\" : \"55.75\",\n    \"CapitalLongitude\" : \"37.600000\",\n    \"CapitalName\" : \"Moscow\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"RU\",\n    \"CountryName\" : \"Russia\"\n  }, {\n    \"CapitalLatitude\" : \"-1.95\",\n    \"CapitalLongitude\" : \"30.050000\",\n    \"CapitalName\" : \"Kigali\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"RW\",\n    \"CountryName\" : \"Rwanda\"\n  }, {\n    \"CapitalLatitude\" : \"17.883333333333333\",\n    \"CapitalLongitude\" : \"-62.850000\",\n    \"CapitalName\" : \"Gustavia\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"BL\",\n    \"CountryName\" : \"Saint Barthelemy\"\n  }, {\n    \"CapitalLatitude\" : \"-15.933333333333334\",\n    \"CapitalLongitude\" : \"-5.716667\",\n    \"CapitalName\" : \"Jamestown\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"SH\",\n    \"CountryName\" : \"Saint Helena\"\n  }, {\n    \"CapitalLatitude\" : \"17.3\",\n    \"CapitalLongitude\" : \"-62.716667\",\n    \"CapitalName\" : \"Basseterre\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"KN\",\n    \"CountryName\" : \"Saint Kitts and Nevis\"\n  }, {\n    \"CapitalLatitude\" : \"14\",\n    \"CapitalLongitude\" : \"-61.000000\",\n    \"CapitalName\" : \"Castries\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"LC\",\n    \"CountryName\" : \"Saint Lucia\"\n  }, {\n    \"CapitalLatitude\" : \"46.766666666666666\",\n    \"CapitalLongitude\" : \"-56.183333\",\n    \"CapitalName\" : \"Saint-Pierre\",\n    \"ContinentName\" : \"Central America\",\n    \"CountryCode\" : \"PM\",\n    \"CountryName\" : \"Saint Pierre and Miquelon\"\n  }, {\n    \"CapitalLatitude\" : \"13.133333333333333\",\n    \"CapitalLongitude\" : \"-61.216667\",\n    \"CapitalName\" : \"Kingstown\",\n    \"ContinentName\" : \"Central America\",\n    \"CountryCode\" : \"VC\",\n    \"CountryName\" : \"Saint Vincent and the Grenadines\"\n  }, {\n    \"CapitalLatitude\" : \"-13.816666666666666\",\n    \"CapitalLongitude\" : \"-171.766667\",\n    \"CapitalName\" : \"Apia\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"WS\",\n    \"CountryName\" : \"Samoa\"\n  }, {\n    \"CapitalLatitude\" : \"43.93333333333333\",\n    \"CapitalLongitude\" : \"12.416667\",\n    \"CapitalName\" : \"San Marino\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"SM\",\n    \"CountryName\" : \"San Marino\"\n  }, {\n    \"CapitalLatitude\" : \"0.3333333333333333\",\n    \"CapitalLongitude\" : \"6.733333\",\n    \"CapitalName\" : \"Sao Tome\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"ST\",\n    \"CountryName\" : \"Sao Tome and Principe\"\n  }, {\n    \"CapitalLatitude\" : \"24.65\",\n    \"CapitalLongitude\" : \"46.700000\",\n    \"CapitalName\" : \"Riyadh\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"SA\",\n    \"CountryName\" : \"Saudi Arabia\"\n  }, {\n    \"CapitalLatitude\" : \"14.733333333333333\",\n    \"CapitalLongitude\" : \"-17.633333\",\n    \"CapitalName\" : \"Dakar\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"SN\",\n    \"CountryName\" : \"Senegal\"\n  }, {\n    \"CapitalLatitude\" : \"44.833333333333336\",\n    \"CapitalLongitude\" : \"20.500000\",\n    \"CapitalName\" : \"Belgrade\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"RS\",\n    \"CountryName\" : \"Serbia\"\n  }, {\n    \"CapitalLatitude\" : \"-4.616666666666667\",\n    \"CapitalLongitude\" : \"55.450000\",\n    \"CapitalName\" : \"Victoria\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"SC\",\n    \"CountryName\" : \"Seychelles\"\n  }, {\n    \"CapitalLatitude\" : \"8.483333333333333\",\n    \"CapitalLongitude\" : \"-13.233333\",\n    \"CapitalName\" : \"Freetown\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"SL\",\n    \"CountryName\" : \"Sierra Leone\"\n  }, {\n    \"CapitalLatitude\" : \"1.2833333333333332\",\n    \"CapitalLongitude\" : \"103.850000\",\n    \"CapitalName\" : \"Singapore\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"SG\",\n    \"CountryName\" : \"Singapore\"\n  }, {\n    \"CapitalLatitude\" : \"18.016666666666666\",\n    \"CapitalLongitude\" : \"-63.033333\",\n    \"CapitalName\" : \"Philipsburg\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"SX\",\n    \"CountryName\" : \"Sint Maarten\"\n  }, {\n    \"CapitalLatitude\" : \"48.15\",\n    \"CapitalLongitude\" : \"17.116667\",\n    \"CapitalName\" : \"Bratislava\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"SK\",\n    \"CountryName\" : \"Slovakia\"\n  }, {\n    \"CapitalLatitude\" : \"46.05\",\n    \"CapitalLongitude\" : \"14.516667\",\n    \"CapitalName\" : \"Ljubljana\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"SI\",\n    \"CountryName\" : \"Slovenia\"\n  }, {\n    \"CapitalLatitude\" : \"-9.433333333333334\",\n    \"CapitalLongitude\" : \"159.950000\",\n    \"CapitalName\" : \"Honiara\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"SB\",\n    \"CountryName\" : \"Solomon Islands\"\n  }, {\n    \"CapitalLatitude\" : \"2.066666666666667\",\n    \"CapitalLongitude\" : \"45.333333\",\n    \"CapitalName\" : \"Mogadishu\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"SO\",\n    \"CountryName\" : \"Somalia\"\n  }, {\n    \"CapitalLatitude\" : \"-25.7\",\n    \"CapitalLongitude\" : \"28.216667\",\n    \"CapitalName\" : \"Pretoria\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"ZA\",\n    \"CountryName\" : \"South Africa\"\n  }, {\n    \"CapitalLatitude\" : \"4.85\",\n    \"CapitalLongitude\" : \"31.616667\",\n    \"CapitalName\" : \"Juba\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"SS\",\n    \"CountryName\" : \"South Sudan\"\n  }, {\n    \"CapitalLatitude\" : \"40.4\",\n    \"CapitalLongitude\" : \"-3.683333\",\n    \"CapitalName\" : \"Madrid\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"ES\",\n    \"CountryName\" : \"Spain\"\n  }, {\n    \"CapitalLatitude\" : \"6.916666666666667\",\n    \"CapitalLongitude\" : \"79.833333\",\n    \"CapitalName\" : \"Colombo\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"LK\",\n    \"CountryName\" : \"Sri Lanka\"\n  }, {\n    \"CapitalLatitude\" : \"15.6\",\n    \"CapitalLongitude\" : \"32.533333\",\n    \"CapitalName\" : \"Khartoum\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"SD\",\n    \"CountryName\" : \"Sudan\"\n  }, {\n    \"CapitalLatitude\" : \"5.833333333333333\",\n    \"CapitalLongitude\" : \"-55.166667\",\n    \"CapitalName\" : \"Paramaribo\",\n    \"ContinentName\" : \"South America\",\n    \"CountryCode\" : \"SR\",\n    \"CountryName\" : \"Suriname\"\n  }, {\n    \"CapitalLatitude\" : \"78.21666666666667\",\n    \"CapitalLongitude\" : \"15.633333\",\n    \"CapitalName\" : \"Longyearbyen\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"SJ\",\n    \"CountryName\" : \"Svalbard\"\n  }, {\n    \"CapitalLatitude\" : \"-26.316666666666666\",\n    \"CapitalLongitude\" : \"31.133333\",\n    \"CapitalName\" : \"Mbabane\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"SZ\",\n    \"CountryName\" : \"Swaziland\"\n  }, {\n    \"CapitalLatitude\" : \"59.333333333333336\",\n    \"CapitalLongitude\" : \"18.050000\",\n    \"CapitalName\" : \"Stockholm\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"SE\",\n    \"CountryName\" : \"Sweden\"\n  }, {\n    \"CapitalLatitude\" : \"46.916666666666664\",\n    \"CapitalLongitude\" : \"7.466667\",\n    \"CapitalName\" : \"Bern\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"CH\",\n    \"CountryName\" : \"Switzerland\"\n  }, {\n    \"CapitalLatitude\" : \"33.5\",\n    \"CapitalLongitude\" : \"36.300000\",\n    \"CapitalName\" : \"Damascus\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"SY\",\n    \"CountryName\" : \"Syria\"\n  }, {\n    \"CapitalLatitude\" : \"25.033333333333335\",\n    \"CapitalLongitude\" : \"121.516667\",\n    \"CapitalName\" : \"Taipei\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"TW\",\n    \"CountryName\" : \"Taiwan\"\n  }, {\n    \"CapitalLatitude\" : \"38.55\",\n    \"CapitalLongitude\" : \"68.766667\",\n    \"CapitalName\" : \"Dushanbe\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"TJ\",\n    \"CountryName\" : \"Tajikistan\"\n  }, {\n    \"CapitalLatitude\" : \"-6.8\",\n    \"CapitalLongitude\" : \"39.283333\",\n    \"CapitalName\" : \"Dar es Salaam\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"TZ\",\n    \"CountryName\" : \"Tanzania\"\n  }, {\n    \"CapitalLatitude\" : \"13.75\",\n    \"CapitalLongitude\" : \"100.516667\",\n    \"CapitalName\" : \"Bangkok\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"TH\",\n    \"CountryName\" : \"Thailand\"\n  }, {\n    \"CapitalLatitude\" : \"-8.583333333333334\",\n    \"CapitalLongitude\" : \"125.600000\",\n    \"CapitalName\" : \"Dili\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"TL\",\n    \"CountryName\" : \"Timor-Leste\"\n  }, {\n    \"CapitalLatitude\" : \"6.116666666666666\",\n    \"CapitalLongitude\" : \"1.216667\",\n    \"CapitalName\" : \"Lome\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"TG\",\n    \"CountryName\" : \"Togo\"\n  }, {\n    \"CapitalLatitude\" : \"-21.133333333333333\",\n    \"CapitalLongitude\" : \"-175.200000\",\n    \"CapitalName\" : \"Nuku'alofa\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"TO\",\n    \"CountryName\" : \"Tonga\"\n  }, {\n    \"CapitalLatitude\" : \"10.65\",\n    \"CapitalLongitude\" : \"-61.516667\",\n    \"CapitalName\" : \"Port of Spain\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"TT\",\n    \"CountryName\" : \"Trinidad and Tobago\"\n  }, {\n    \"CapitalLatitude\" : \"36.8\",\n    \"CapitalLongitude\" : \"10.183333\",\n    \"CapitalName\" : \"Tunis\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"TN\",\n    \"CountryName\" : \"Tunisia\"\n  }, {\n    \"CapitalLatitude\" : \"39.93333333333333\",\n    \"CapitalLongitude\" : \"32.866667\",\n    \"CapitalName\" : \"Ankara\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"TR\",\n    \"CountryName\" : \"Turkey\"\n  }, {\n    \"CapitalLatitude\" : \"37.95\",\n    \"CapitalLongitude\" : \"58.383333\",\n    \"CapitalName\" : \"Ashgabat\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"TM\",\n    \"CountryName\" : \"Turkmenistan\"\n  }, {\n    \"CapitalLatitude\" : \"21.466666666666665\",\n    \"CapitalLongitude\" : \"-71.133333\",\n    \"CapitalName\" : \"Grand Turk\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"TC\",\n    \"CountryName\" : \"Turks and Caicos Islands\"\n  }, {\n    \"CapitalLatitude\" : \"-8.516666666666667\",\n    \"CapitalLongitude\" : \"179.216667\",\n    \"CapitalName\" : \"Funafuti\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"TV\",\n    \"CountryName\" : \"Tuvalu\"\n  }, {\n    \"CapitalLatitude\" : \"0.31666666666666665\",\n    \"CapitalLongitude\" : \"32.550000\",\n    \"CapitalName\" : \"Kampala\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"UG\",\n    \"CountryName\" : \"Uganda\"\n  }, {\n    \"CapitalLatitude\" : \"50.43333333333333\",\n    \"CapitalLongitude\" : \"30.516667\",\n    \"CapitalName\" : \"Kyiv\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"UA\",\n    \"CountryName\" : \"Ukraine\"\n  }, {\n    \"CapitalLatitude\" : \"24.466666666666665\",\n    \"CapitalLongitude\" : \"54.366667\",\n    \"CapitalName\" : \"Abu Dhabi\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"AE\",\n    \"CountryName\" : \"United Arab Emirates\"\n  }, {\n    \"CapitalLatitude\" : \"51.5\",\n    \"CapitalLongitude\" : \"-0.083333\",\n    \"CapitalName\" : \"London\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"GB\",\n    \"CountryName\" : \"United Kingdom\"\n  }, {\n    \"CapitalLatitude\" : \" D.C.\",\n    \"CapitalLongitude\" : \"38.883333\",\n    \"CapitalName\" : \"Washington\",\n    \"ContinentName\" : \"US\",\n    \"CountryCode\" : \"-77.000000\",\n    \"CountryName\" : \"United States\"\n  }, {\n    \"CapitalLatitude\" : \"-34.85\",\n    \"CapitalLongitude\" : \"-56.166667\",\n    \"CapitalName\" : \"Montevideo\",\n    \"ContinentName\" : \"South America\",\n    \"CountryCode\" : \"UY\",\n    \"CountryName\" : \"Uruguay\"\n  }, {\n    \"CapitalLatitude\" : \"41.31666666666667\",\n    \"CapitalLongitude\" : \"69.250000\",\n    \"CapitalName\" : \"Tashkent\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"UZ\",\n    \"CountryName\" : \"Uzbekistan\"\n  }, {\n    \"CapitalLatitude\" : \"-17.733333333333334\",\n    \"CapitalLongitude\" : \"168.316667\",\n    \"CapitalName\" : \"Port-Vila\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"VU\",\n    \"CountryName\" : \"Vanuatu\"\n  }, {\n    \"CapitalLatitude\" : \"10.483333333333333\",\n    \"CapitalLongitude\" : \"-66.866667\",\n    \"CapitalName\" : \"Caracas\",\n    \"ContinentName\" : \"South America\",\n    \"CountryCode\" : \"VE\",\n    \"CountryName\" : \"Venezuela\"\n  }, {\n    \"CapitalLatitude\" : \"21.033333333333335\",\n    \"CapitalLongitude\" : \"105.850000\",\n    \"CapitalName\" : \"Hanoi\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"VN\",\n    \"CountryName\" : \"Vietnam\"\n  }, {\n    \"CapitalLatitude\" : \"18.35\",\n    \"CapitalLongitude\" : \"-64.933333\",\n    \"CapitalName\" : \"Charlotte Amalie\",\n    \"ContinentName\" : \"North America\",\n    \"CountryCode\" : \"VI\",\n    \"CountryName\" : \"US Virgin Islands\"\n  }, {\n    \"CapitalLatitude\" : \"-13.95\",\n    \"CapitalLongitude\" : \"-171.933333\",\n    \"CapitalName\" : \"Mata-Utu\",\n    \"ContinentName\" : \"Australia\",\n    \"CountryCode\" : \"WF\",\n    \"CountryName\" : \"Wallis and Futuna\"\n  }, {\n    \"CapitalLatitude\" : \"15.35\",\n    \"CapitalLongitude\" : \"44.200000\",\n    \"CapitalName\" : \"Sanaa\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"YE\",\n    \"CountryName\" : \"Yemen\"\n  }, {\n    \"CapitalLatitude\" : \"-15.416666666666666\",\n    \"CapitalLongitude\" : \"28.283333\",\n    \"CapitalName\" : \"Lusaka\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"ZM\",\n    \"CountryName\" : \"Zambia\"\n  }, {\n    \"CapitalLatitude\" : \"-17.816666666666666\",\n    \"CapitalLongitude\" : \"31.033333\",\n    \"CapitalName\" : \"Harare\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"ZW\",\n    \"CountryName\" : \"Zimbabwe\"\n  }, {\n    \"CapitalLatitude\" : \" D.C.\",\n    \"CapitalLongitude\" : \"38.883333\",\n    \"CapitalName\" : \"Washington\",\n    \"ContinentName\" : \"UM\",\n    \"CountryCode\" : \"-77.000000\",\n    \"CountryName\" : \"US Minor Outlying Islands\"\n  }, {\n    \"CapitalLatitude\" : \"0\",\n    \"CapitalLongitude\" : \"0.000000\",\n    \"CapitalName\" : \"N/A\",\n    \"ContinentName\" : \"Antarctica\",\n    \"CountryCode\" : \"AQ\",\n    \"CountryName\" : \"Antarctica\"\n  }, {\n    \"CapitalLatitude\" : \"35.183333\",\n    \"CapitalLongitude\" : \"33.366667\",\n    \"CapitalName\" : \"North Nicosia\",\n    \"ContinentName\" : \"Europe\",\n    \"CountryCode\" : \"NULL\",\n    \"CountryName\" : \"Northern Cyprus\"\n  }, {\n    \"CapitalLatitude\" : \"0\",\n    \"CapitalLongitude\" : \"0.000000\",\n    \"CapitalName\" : \"N/A\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"HK\",\n    \"CountryName\" : \"Hong Kong\"\n  }, {\n    \"CapitalLatitude\" : \"0\",\n    \"CapitalLongitude\" : \"0.000000\",\n    \"CapitalName\" : \"N/A\",\n    \"ContinentName\" : \"Antarctica\",\n    \"CountryCode\" : \"HM\",\n    \"CountryName\" : \"Heard Island and McDonald Islands\"\n  }, {\n    \"CapitalLatitude\" : \"-7.3\",\n    \"CapitalLongitude\" : \"72.400000\",\n    \"CapitalName\" : \"Diego Garcia\",\n    \"ContinentName\" : \"Africa\",\n    \"CountryCode\" : \"IO\",\n    \"CountryName\" : \"British Indian Ocean Territory\"\n  }, {\n    \"CapitalLatitude\" : \"0\",\n    \"CapitalLongitude\" : \"0.000000\",\n    \"CapitalName\" : \"N/A\",\n    \"ContinentName\" : \"Asia\",\n    \"CountryCode\" : \"MO\",\n    \"CountryName\" : \"Macau\"\n  } ]\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/capitals.ts","import { Component, OnInit } from '@angular/core';\nimport { AppMessage }        from    '../../models/app-message.model';\n\n/**\n * Generated class for the OfflineMessageComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n@Component({\n  selector: 'offline-message',\n  templateUrl: 'offline-message.html'\n})\n\nexport class OfflineMessageComponent implements OnInit {\n\n  message: AppMessage = new AppMessage();\n\n  constructor(){\n    console.log('Hello OfflineMessageComponent Component');\n  }\n\n  ngOnInit() {\n    this.message.UseNotConnectedMessage();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/offline-message/offline-message.ts","export class AppMessage {\n    \n    title: string;\n    message: string;\n    description: string;\n    advice: string;\n    \n    constructor() {  }\n\n    public UseNotConnectedMessage() {\n        this.title = \"Aucune connection Internet n'a été détectée.\";\n        this.description = \"Vous n'êtes pas connecté à Internet. \"\n        this.advice = \"Assurez-vous que la Wi-Fi ou les données mobiles sont activées.\"\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/app-message.model.ts","import { Component, ViewChild }         from '@angular/core';\nimport { Nav, Platform }                from 'ionic-angular';\nimport { StatusBar }                    from '@ionic-native/status-bar';\nimport { SplashScreen }                 from '@ionic-native/splash-screen';\n\nimport { HomePage }                     from '../pages/home/home';\nimport { ContactPage  }                 from  '../pages/contact/contact'\nimport { OtherPlacePage  }              from  '../pages/otherplaces/otherplaces'; \n\n@Component({\n  templateUrl: 'app.html'\n})\n\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  rootPage: any = HomePage;\n\n  pages: Array<{title: string, component: any}>;\n\n  constructor(public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen) {\n    this.initializeApp(); \n\n    // used for an example of ngFor and navigation\n    this.pages = [\n      { title: 'Accueil', component: HomePage },\n      { title: 'Next Week Forecast', component: 'NextWeekForecastPage' },\n      { title: 'Ailleurs', component: OtherPlacePage },\n      { title: 'About us', component: ContactPage },\n      { title: 'Feedback', component: ''}\n    ]; \n\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  openPage(page) {\n    // Reset the content nav to have just this page\n    // we wouldn't want the back button to show in this scenario\n    this.nav.setRoot(page.component);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","// Firebase config file \n\nexport const firebase = {\n    apiKey: \"AIzaSyAzM0s8ppPIARqhe3m4MPG7HJYVCCLJ1F4\",\n    authDomain: \"oweather-526db.firebaseapp.com\",\n    databaseURL: \"https://oweather-526db.firebaseio.com\",\n    projectId: \"oweather-526db\",\n    storageBucket: \"oweather-526db.appspot.com\",\n    messagingSenderId: \"790818390879\"\n  };\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/firebase.ts","/**\r\n * Représente les données envoyées par le GPS du téléphone\r\n * Learn more here : Coordinates section on: https://ionicframework.com/docs/native/geolocation/\r\n */\r\n\r\nexport class IonicNativeGeoposition{\r\n    latitude: number;\r\n    longitude: number;\r\n    altitude: number;\r\n    speed: number;\r\n    heading: number;\r\n    altitudeAccuracy: number;\r\n    accuracy: number;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/ionicnative-geoposition.model.ts","//core components\r\nimport { Injectable  }                   from    '@angular/core';\r\nimport { Http  }                         from    '@angular/http';\r\nimport { Geolocation }                   from    '@ionic-native/geolocation';\r\nimport { IonicNativeGeoposition   }      from    '../models/ionicnative-geoposition.model';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class IonicNativeService {\r\n\r\n    constructor(private geolocation: Geolocation) {  }\r\n\r\n    /**GET THE LOCATION OF DEVICE USING NATIVE GEOLOCATION DATA */\r\n    public loadCurrentLocation() {\r\n        \r\n        return this.geolocation.getCurrentPosition()\r\n            .then((response) =>  response.coords as IonicNativeGeoposition)\r\n            .catch((error) => console.log(\"Unable to get location because => \" + error));\r\n    }\r\n    \r\n    \r\n    public GetMyLocation() {\r\n        \r\n        return this.geolocation.getCurrentPosition()\r\n            .then((response) =>  response.coords as IonicNativeGeoposition)\r\n            .catch((error) => console.log(\"Unable to get location because => \" + error.message));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/ionicnative.service.ts","//core components\nimport { Injectable }                       from '@angular/core';\nimport { HttpClient, HttpHeaders }          from '@angular/common/http';\nimport { Observable }                       from 'rxjs/Observable';\nimport { of }                               from 'rxjs/observable/of';\nimport { catchError, map, tap }             from 'rxjs/operators';\n\nimport { DarkSkyApiResponse }               from '../models/darkskyapi-response.model';\nimport { IonicNativeGeoposition }           from '../models/ionicnative-geoposition.model';\nimport { darksky }                          from \"../config/darksky\";\n\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable()\n\nexport class DarkSkyApiService {\n\n    constructor (private http: HttpClient) { }\n\n    /** GET FORECAST OF RECEIVED LOCATION\n     * @param place The place that we want to get the forecast\n    */\n    public getCurrentForecast(origins: IonicNativeGeoposition): Observable<DarkSkyApiResponse> {\n        \n        let parameters: string = '';\n        let language = `lang=${darksky.defaultLanguage}`;\n        \n        if (origins.latitude == undefined || origins.latitude == undefined) { \n            console.log(\"Real position not get\");\n            //On utilisera des valeurs par défaut (de Cotonou) en attendant que le problème d'origins soit réglé\n            let or : IonicNativeGeoposition = new IonicNativeGeoposition();\n            or.latitude = 6.3559122;\n            or.longitude = 2.436167;\n            parameters = `${or.latitude},${or.longitude}?${language}`;\n        }\n        else {\n            parameters = `${origins.latitude},${origins.longitude}?${language}`;\n        }\n        const url = darksky.apiBaseUrl + darksky.apiKey +'/'+parameters;\n        \n        return this.http.get<DarkSkyApiResponse>(url)\n        .pipe(\n            tap (\n                (data) => { }\n            ),\n            catchError(this.handleError<DarkSkyApiResponse>('getForecast'))\n        );\n    }\n\n    private handleError<T> (operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n      \n          // TODO: send the error to remote logging infrastructure\n          console.error(error); // log to console instead\n      \n          // TODO: better job of transforming error for user consumption\n          this.log(`${operation} failed: ${error.message}`);\n      \n          // Let the app keep running by returning an empty result.\n          return of(result as T);\n        };\n      }\n      \n      private log(message: string) {\n        console.log('DarkSkyApiService: ' + message);\n      }\n    \n    /** GET FORECAST OF RECEIVED LOCATION AND THE DAY\n     * @param place The place that we want to get the forecast\n     * @param day the day forecast we wanna get\n     */\n    public getTimeMachineRequest(place: IonicNativeGeoposition, day: string) {\n       \n        //TODO: Write the code of this method \n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/darkskyapi.service.ts"],"sourceRoot":""}